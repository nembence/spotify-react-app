{"ast":null,"code":"var _jsxFileName = \"/home/mag/Documents/codecool/advanced/spotify-react-app/src/components/Category/Category.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Input } from \"semantic-ui-react\";\nimport url from \"../../utilities/url\";\nimport { Header } from \"semantic-ui-react\";\nimport SearchHandler from \"./SearchHandler\";\n\nconst Category = ({\n  categoryType\n}) => {\n  const [search, setSearch] = useState(false);\n  const [urlString, setUrl] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const headerStyle = {\n    marginBottom: \"20px\"\n  };\n\n  const handleChange = event => {\n    setCategory(categoryType);\n    const searchString = event.target.value;\n\n    if (searchString !== \"\") {\n      setUrl(url.search + searchString + \"&type=\" + categoryType);\n      setSearch(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleChange,\n    placeholder: \"Search \" + categoryType,\n    size: \"big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    style: headerStyle,\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Find your favorite \", categoryType), search === true && categoryType === category && /*#__PURE__*/React.createElement(SearchHandler, {\n    urlString: urlString,\n    categoryType: categoryType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Category;","map":{"version":3,"sources":["/home/mag/Documents/codecool/advanced/spotify-react-app/src/components/Category/Category.jsx"],"names":["React","useState","useEffect","Input","url","Header","SearchHandler","Category","categoryType","search","setSearch","urlString","setUrl","category","setCategory","headerStyle","marginBottom","handleChange","event","searchString","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,MAAZ,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMc,WAAW,GAAG;AAChBC,IAAAA,YAAY,EAAE;AADE,GAApB;;AAIA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BJ,IAAAA,WAAW,CAACN,YAAD,CAAX;AACA,UAAMW,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAlC;;AACA,QAAIF,YAAY,KAAK,EAArB,EAAyB;AACrBP,MAAAA,MAAM,CAACR,GAAG,CAACK,MAAJ,GAAaU,YAAb,GAA4B,QAA5B,GAAuCX,YAAxC,CAAN;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,QAAQ,EAAEO,YADd;AAEI,IAAA,WAAW,EAAE,YAAYT,YAF7B;AAGI,IAAA,IAAI,EAAC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEO,WAAf;AAA4B,IAAA,EAAE,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACwBP,YADxB,CANJ,EASKC,MAAM,KAAK,IAAX,IAAmBD,YAAY,KAAKK,QAApC,iBACG,oBAAC,aAAD;AACI,IAAA,SAAS,EAAEF,SADf;AAEI,IAAA,YAAY,EAAEH,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,CADJ;AAkBH,CApCD;;AAsCA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Input } from \"semantic-ui-react\";\nimport url from \"../../utilities/url\";\nimport { Header } from \"semantic-ui-react\";\nimport SearchHandler from \"./SearchHandler\";\n\nconst Category = ({ categoryType }) => {\n    const [search, setSearch] = useState(false);\n    const [urlString, setUrl] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n\n    const headerStyle = {\n        marginBottom: \"20px\"\n    };\n\n    const handleChange = event => {\n        setCategory(categoryType);\n        const searchString = event.target.value;\n        if (searchString !== \"\") {\n            setUrl(url.search + searchString + \"&type=\" + categoryType);\n            setSearch(true);\n        }\n    };\n\n    return (\n        <div className='content'>\n            <Input\n                onChange={handleChange}\n                placeholder={\"Search \" + categoryType}\n                size='big'\n            />\n            <Header style={headerStyle} as='h1'>\n                Find your favorite {categoryType}\n            </Header>\n            {search === true && categoryType === category && (\n                <SearchHandler\n                    urlString={urlString}\n                    categoryType={categoryType}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}