{"ast":null,"code":"var _jsxFileName = \"/home/mag/Documents/codecool/advanced/spotify-react-app/src/components/CardItem/CardItem.jsx\";\nimport React, { useContext } from \"react\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport { FavouriteContext } from \"../../context/FavouriteContext\";\nconst cardStyle = {\n  margin: \"10px\",\n  maxWidth: \"300px\"\n};\nconst starStyle = {\n  marginLeft: \"110px\"\n};\n\nconst CardItem = ({\n  category,\n  img,\n  imageUrl,\n  header,\n  headerUrl,\n  footer\n}) => {\n  const {\n    artists,\n    tracks,\n    albums,\n    playlists\n  } = useContext(FavouriteContext);\n  const [artist, setArtist] = artists;\n  const [track, setTrack] = tracks;\n  const [album, setAlbum] = albums;\n  const [playlist, setPlaylist] = playlists;\n\n  const handleClick = () => {\n    const card = {\n      img: img,\n      imageUrl: imageUrl,\n      header: header,\n      headerUrl,\n      footer\n    };\n    setCard(card);\n  };\n\n  const setCard = card => {\n    switch (category) {\n      case \"album\":\n        if (!album.includes(Object.values(card))) {\n          setAlbum(prevAlbums => [...prevAlbums, card]);\n        }\n\n        break;\n\n      case \"artist\":\n        if (!artist.includes(Object.values(card))) {\n          setArtist(prevArtists => [...prevArtists, card]);\n        }\n\n        break;\n\n      case \"track\":\n        if (!track.includes(Object.values(card))) {\n          setTrack(prevTracks => [...prevTracks, card]);\n        }\n\n        break;\n\n      case \"playlist\":\n        if (!playlist.includes(Object.values(card))) {\n          setPlaylist(prevPlaylists => [...prevPlaylists, card]);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: cardStyle,\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: img,\n    alt: \"\",\n    wrapped: true,\n    as: \"a\",\n    ui: false,\n    href: imageUrl,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, footer), /*#__PURE__*/React.createElement(Card.Description, {\n    as: \"a\",\n    href: headerUrl,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, header)), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: starStyle,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"star\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CardItem;","map":{"version":3,"sources":["/home/mag/Documents/codecool/advanced/spotify-react-app/src/components/CardItem/CardItem.jsx"],"names":["React","useContext","Card","Image","Icon","FavouriteContext","cardStyle","margin","maxWidth","starStyle","marginLeft","CardItem","category","img","imageUrl","header","headerUrl","footer","artists","tracks","albums","playlists","artist","setArtist","track","setTrack","album","setAlbum","playlist","setPlaylist","handleClick","card","setCard","includes","Object","values","prevAlbums","prevArtists","prevTracks","prevPlaylists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,mBAAlC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,MADM;AAEdC,EAAAA,QAAQ,EAAE;AAFI,CAAlB;AAKA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AADE,CAAlB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,GAAZ;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA,SAAnC;AAA8CC,EAAAA;AAA9C,CAAD,KAA4D;AACzE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA;AAA3B,MAAyCpB,UAAU,CAACI,gBAAD,CAAzD;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBL,OAA5B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBN,MAA1B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBP,MAA1B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BR,SAAhC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACtB,UAAMC,IAAI,GAAG;AACTlB,MAAAA,GAAG,EAAEA,GADI;AAETC,MAAAA,QAAQ,EAAEA,QAFD;AAGTC,MAAAA,MAAM,EAAEA,MAHC;AAITC,MAAAA,SAJS;AAKTC,MAAAA;AALS,KAAb;AAOAe,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GATD;;AAWA,QAAMC,OAAO,GAAGD,IAAI,IAAI;AACpB,YAAQnB,QAAR;AACI,WAAK,OAAL;AACI,YAAI,CAACc,KAAK,CAACO,QAAN,CAAeC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAf,CAAL,EAA0C;AACtCJ,UAAAA,QAAQ,CAACS,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBL,IAAhB,CAAf,CAAR;AACH;;AACD;;AACJ,WAAK,QAAL;AACI,YAAI,CAACT,MAAM,CAACW,QAAP,CAAgBC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAhB,CAAL,EAA2C;AACvCR,UAAAA,SAAS,CAACc,WAAW,IAAI,CAAC,GAAGA,WAAJ,EAAiBN,IAAjB,CAAhB,CAAT;AACH;;AACD;;AACJ,WAAK,OAAL;AACI,YAAI,CAACP,KAAK,CAACS,QAAN,CAAeC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAf,CAAL,EAA0C;AACtCN,UAAAA,QAAQ,CAACa,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBP,IAAhB,CAAf,CAAR;AACH;;AACD;;AACJ,WAAK,UAAL;AACI,YAAI,CAACH,QAAQ,CAACK,QAAT,CAAkBC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAlB,CAAL,EAA6C;AACzCF,UAAAA,WAAW,CAACU,aAAa,IAAI,CAAC,GAAGA,aAAJ,EAAmBR,IAAnB,CAAlB,CAAX;AACH;;AACD;;AACJ;AACI;AAtBR;AAwBH,GAzBD;;AA2BA,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,SAAb;AAAwB,IAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEO,GADT;AAEI,IAAA,GAAG,EAAC,EAFR;AAGI,IAAA,OAAO,MAHX;AAII,IAAA,EAAE,EAAC,GAJP;AAKI,IAAA,EAAE,EAAE,KALR;AAMI,IAAA,IAAI,EAAEC,QANV;AAOI,IAAA,MAAM,EAAC,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcG,MAAd,CADJ,eAEI,oBAAC,IAAD,CAAM,WAAN;AAAkB,IAAA,EAAE,EAAC,GAArB;AAAyB,IAAA,IAAI,EAAED,SAA/B;AAA0C,IAAA,MAAM,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,MADL,CAFJ,CAVJ,eAgBI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAEN,SAAb;AAAwB,IAAA,OAAO,EAAEqB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAhBJ,CADJ;AAwBH,CArED;;AAuEA,eAAenB,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport { FavouriteContext } from \"../../context/FavouriteContext\";\n\nconst cardStyle = {\n    margin: \"10px\",\n    maxWidth: \"300px\"\n};\n\nconst starStyle = {\n    marginLeft: \"110px\"\n};\n\nconst CardItem = ({ category, img, imageUrl, header, headerUrl, footer }) => {\n    const { artists, tracks, albums, playlists } = useContext(FavouriteContext);\n    const [artist, setArtist] = artists;\n    const [track, setTrack] = tracks;\n    const [album, setAlbum] = albums;\n    const [playlist, setPlaylist] = playlists;\n\n    const handleClick = () => {\n        const card = {\n            img: img,\n            imageUrl: imageUrl,\n            header: header,\n            headerUrl,\n            footer\n        };\n        setCard(card);\n    };\n\n    const setCard = card => {\n        switch (category) {\n            case \"album\":\n                if (!album.includes(Object.values(card))) {\n                    setAlbum(prevAlbums => [...prevAlbums, card]);\n                }\n                break;\n            case \"artist\":\n                if (!artist.includes(Object.values(card))) {\n                    setArtist(prevArtists => [...prevArtists, card]);\n                }\n                break;\n            case \"track\":\n                if (!track.includes(Object.values(card))) {\n                    setTrack(prevTracks => [...prevTracks, card]);\n                }\n                break;\n            case \"playlist\":\n                if (!playlist.includes(Object.values(card))) {\n                    setPlaylist(prevPlaylists => [...prevPlaylists, card]);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <Card style={cardStyle} className='column'>\n            <Image\n                src={img}\n                alt=\"\"\n                wrapped\n                as='a'\n                ui={false}\n                href={imageUrl}\n                target='_blank'\n            />\n            <Card.Content>\n                <Card.Header>{footer}</Card.Header>\n                <Card.Description as='a' href={headerUrl} target='_blank'>\n                    {header}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <span style={starStyle} onClick={handleClick}>\n                    <Icon name='star' size='large' />\n                </span>\n            </Card.Content>\n        </Card>\n    );\n};\n\nexport default CardItem;\n"]},"metadata":{},"sourceType":"module"}