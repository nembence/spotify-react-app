{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport token from \"./token\";\n\nconst useFetch = (url, route) => {\n  const [status, setStatus] = useState(\"\");\n  const [fetchedData, setData] = useState([]);\n  const [error, setError] = useState({});\n  useEffect(() => {\n    setStatus(\"loading\");\n    token.getToken().then(data => {\n      fetchData(data);\n    });\n  }, []);\n\n  const fetchData = data => {\n    axios.get(url, {\n      headers: {\n        Authorization: \"Bearer \" + data\n      }\n    }).then(response => {\n      setStatus(\"loaded\");\n      setData(getObjectRoute(response));\n    }).catch(error => {\n      setStatus(\"error\");\n      console.log(error.response.status);\n      setError(error.response);\n    });\n  };\n\n  const getObjectRoute = response => {\n    switch (route) {\n      case \"release\":\n        return response.data.albums.items;\n\n      case \"artist\":\n        return response.data.artists.items;\n\n      case \"track\":\n        return response.data.tracks.items;\n\n      case \"playlist\":\n        return response.data.playlists.items;\n\n      case \"album\":\n        return response.data.albums.items;\n\n      default:\n        return \"error\";\n    }\n  };\n\n  return [status, error, fetchedData];\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/home/mag/Documents/codecool/advanced/spotify-react-app/src/utilities/useFetch.js"],"names":["useState","useEffect","axios","token","useFetch","url","route","status","setStatus","fetchedData","setData","error","setError","getToken","then","data","fetchData","get","headers","Authorization","response","getObjectRoute","catch","console","log","albums","items","artists","tracks","playlists"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,WAAD,EAAcC,OAAd,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAAC,SAAD,CAAT;AACAL,IAAAA,KAAK,CAACU,QAAN,GAAiBC,IAAjB,CAAuBC,IAAD,IAAU;AAC5BC,MAAAA,SAAS,CAACD,IAAD,CAAT;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,SAAS,GAAID,IAAD,IAAU;AACxBb,IAAAA,KAAK,CACAe,GADL,CACSZ,GADT,EACc;AACNa,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,YAAYJ;AADtB;AADH,KADd,EAMKD,IANL,CAMWM,QAAD,IAAc;AAChBZ,MAAAA,SAAS,CAAC,QAAD,CAAT;AACAE,MAAAA,OAAO,CAACW,cAAc,CAACD,QAAD,CAAf,CAAP;AACH,KATL,EAUKE,KAVL,CAUYX,KAAD,IAAW;AACdH,MAAAA,SAAS,CAAC,OAAD,CAAT;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACS,QAAN,CAAeb,MAA3B;AACAK,MAAAA,QAAQ,CAACD,KAAK,CAACS,QAAP,CAAR;AACH,KAdL;AAeH,GAhBD;;AAkBA,QAAMC,cAAc,GAAID,QAAD,IAAc;AACjC,YAAQd,KAAR;AACI,WAAK,SAAL;AACI,eAAOc,QAAQ,CAACL,IAAT,CAAcU,MAAd,CAAqBC,KAA5B;;AACJ,WAAK,QAAL;AACI,eAAON,QAAQ,CAACL,IAAT,CAAcY,OAAd,CAAsBD,KAA7B;;AACJ,WAAK,OAAL;AACI,eAAON,QAAQ,CAACL,IAAT,CAAca,MAAd,CAAqBF,KAA5B;;AACJ,WAAK,UAAL;AACI,eAAON,QAAQ,CAACL,IAAT,CAAcc,SAAd,CAAwBH,KAA/B;;AACJ,WAAK,OAAL;AACI,eAAON,QAAQ,CAACL,IAAT,CAAcU,MAAd,CAAqBC,KAA5B;;AACJ;AACI,eAAO,OAAP;AAZR;AAcH,GAfD;;AAiBA,SAAO,CAACnB,MAAD,EAASI,KAAT,EAAgBF,WAAhB,CAAP;AACH,CAhDD;;AAkDA,eAAeL,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport token from \"./token\";\n\nconst useFetch = (url, route) => {\n    const [status, setStatus] = useState(\"\");\n    const [fetchedData, setData] = useState([]);\n    const [error, setError] = useState({});\n\n    useEffect(() => {\n        setStatus(\"loading\");\n        token.getToken().then((data) => {\n            fetchData(data);\n        });\n    }, []);\n\n    const fetchData = (data) => {\n        axios\n            .get(url, {\n                headers: {\n                    Authorization: \"Bearer \" + data,\n                },\n            })\n            .then((response) => {\n                setStatus(\"loaded\");\n                setData(getObjectRoute(response));\n            })\n            .catch((error) => {\n                setStatus(\"error\");\n                console.log(error.response.status);\n                setError(error.response);\n            });\n    };\n\n    const getObjectRoute = (response) => {\n        switch (route) {\n            case \"release\":\n                return response.data.albums.items;\n            case \"artist\":\n                return response.data.artists.items;\n            case \"track\":\n                return response.data.tracks.items;\n            case \"playlist\":\n                return response.data.playlists.items;\n            case \"album\":\n                return response.data.albums.items;\n            default:\n                return \"error\";\n        }\n    };\n\n    return [status, error, fetchedData];\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}